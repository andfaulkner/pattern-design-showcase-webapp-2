
! express running - static
! eslint running
! basic webpack build & gulp with targeted watch
! ECMA6 classes - basics
! fast Webpack builds (by splitting out the globals)
! look into Bootstrap-React
! install Bootstrap-React
! add Bootstrap-React css & fonts
		XXX NO BOOTSTRAP-REACT, IT SUCKS
! pull gulpfile config out
! getOptions.js helper to compute and grab all options (to remove logic from config files)
! react classes  <<< not that useful
! react-router (too much crap in index.jsx)
! decorators
! react property validation (PropTypes.*.{isRequired?})

! redux debug tools - get it working!
! mini client-side log
! react-redux mvc todo
! sane, DRY (basic) topbar routing
! get google auth wired in
! get redis session wired in
! pretty logs
! actually get real authentication to occur
! some sort of comparison against data in Redis
! select auth items from google returns
! build carousel

! get carousel to resize on some page resizes
! get carousel to restart when page restarts
! transform-decorators-legacy linter
! multi-output gulpfile
! top logo
! sane library import

! Install React-Bootstrap
! get React-Bootstrap to show 1 element (as POC)
! React-Bootstrap TextContent grid

! TextContentBlocks: TextContentBlocks CorporateDesignsBlock static
! TextContentBlocks: BannersImgBlock static
! accelerate Webpack - cut build time by 1/2 (below 5s)

! set SASS up (don't be using inline, it's mostly a bad idea)

- split your Content Blocks items into specific files

- require paths relative to client root?

- REACT-LEARN: understand controlled components (vs. not)
- restructure tag file locations

- REDUX: understand "containers" for elements (Redux / Flux)

- Complete React component structure list

- REACT-TDD: learn how to test React components
	- test your main react components

- TDD: set up a test suite (mocha?)
- TDD: set up autorunning tests
- TDD: write your excellent tests

- Carousel 
	-	Translucent vertical blocks on L & R, around arrows
	- proper arrows (nicer images)
	- fix occasional freezing on resize
	- image click popup
		- stop carousel on popup
		- L & R arrows to shift between imgs

- Nav-menu
	- get highlighting working properly
	- Actual titles
	- Link in new actual page files

- FOOTER: get to stick properly (:after syntax?)
- FOOTER: properly laid-out
- FOOTER: add content
- 

- TextContentBlocks
		- LatestUpdatesBlock static
		- SocialMediaButtons static
		- Determine "see more" behaviour
			- modal? content area replace?

- Redux
	- finish course 
	- states diagram
	- learn Provider tag pattern
	- Get store, provide to all of app
	- write actions
	- write reducers
	- wire into react components

- on route change alter selected menu item
- load navmenu item names in by AJAX?
- load text content in by AJAX

- req filter
- simple place to route to on auth
- login box, backend



XXXX material design
	XXX install
	XXX implement one feature

?X react grids

- react css
	! react standard css? <<< it fucking sucks
	- react decorator-based non-inline styles
	- webpack css ?
- Radium
- react forms
- react-router-redux - replace react-router with it
- wire in a cool component (POC)

- wire in redux
- DRY your paths again (e.g. to the html entries)

- split auth page out
- react decorators
- react routes
- login box (auth page)
- webpack splitting
	- split auth page
- hook rest API up to login box

- auth with redis etc.
		! auth page - basic form
		- style auth page
		- post-login page - basic image
		- redis config
		- passport?
		- 
- dry up gulpfile, webpack, *.html


Advanced (later)
- browser livereload
- decorators
	- enable decorators
	- learn decorators
	- get a class working
	- decorators basic example


________________________________________________________
! favicon
! base route
- get koa serving a static asset
- login package - with Koa
- admin page - with login
- frontend templating? (react starter?)
- logging setup (winston)
- folder structure
- state management (redux)
- build each web-component (React)
- form handling (body parser)
- react starter
- koa starter
- config module setup
- config setup

routing
- Koa routing
	! get route module to work
	! work out routes
	- create route for each ?

db
! work out table schema
! postgres setup (including scripts)
- ORM setup - bookshelf
	- initialize bookshelf
	- koa bookshelf?

testing
! install unit testing modules (mocha, request)
- build unit tests?


build
- webpack setup
- build tool setup (Broccoli)
- base brocfile ?
- base gulpfile
- base webpack file